<div id="myToolbar" class="mini-toolbar" style="border-bottom: 0px; padding: 0px;">
    <table style="width: 100%;" cellpadding="0" cellspacing="0">
        <tr>
            <td style="width: 100%;">
                <a class="mini-button" iconcls="icon-help" plain="true" href="@Url.RouteUrl(new { controller = "File", action = "DownloadHelpFiles" })?FileName=Place" target="_blank"></a>当前位置：基础数据>站点管理>站点信息
            </td>
            <td style="white-space: nowrap;">
                <a id="btnSearch" class="mini-button" iconcls="icon-search" plain="true" onclick="onSearchClick">查询</a>
                <a id="btnShowMap" class="mini-button" iconcls="icon-map" plain="true" onclick="onShowMapClick">地图导航</a>
            </td>
        </tr>
    </table>
</div>
<div class="mini-fit">
    <div id="dgPlace" class="mini-datagrid" style="width: 100%; height: 100%;" idfield="Id" allowmovecolumn="false"
         multiselect="true" fitcolumns="false" onlycheckselection="true" showreloadbutton="false" pagesize="15" sizelist="[15,30,50,100]"
         virtualscroll="false" ondrawcell="onDrawCell" onload="onDgPlaceLoad" oncellclick="onCellClick">
        <div property="columns">
            <div type="indexcolumn"></div>
            <div type="comboboxcolumn" field="Profession" header="专业" width="50">
                <input property="editor" class="mini-combobox" style="width: 100%;" data=@Html.Raw(ViewData["Profession"]) />
            </div>
            <div field="PlaceName" header="站点名称" width="150"></div>
            <div field="Map" header="导航图" width="50"></div>
        </div>
    </div>
</div>
<div id="winQuery" class="mini-window" style="width: 600px; height: 170px;"
     showmodal="true" allowresize="false" title="查询条件">
    <table style="width: 100%;">
        <tr>
            <td style="width: 80px; text-align: right;">专业</td>
            <td>
                <input id="cbProfession" class="mini-combobox" value="0" style="width:200px;" data=@Html.Raw(ViewData["ProfessionByAll"]) />
            </td>
            <td style="width: 80px; text-align: right;">站点名称</td>
            <td>
                <input id="txtPlaceName" class="mini-textbox" style="width:200px;" />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">区域</td>
            <td>
                <input id="cbAreaId" class="mini-combobox" value="00000000-0000-0000-0000-000000000000" style="width:200px;" textfield="AreaName" valuefield="Id" data=@Html.Raw(ViewData["AreasByAll"])
                       onvaluechanged="onCbAreaIdValueChanged" />
            </td>
            <td style="width: 80px; text-align: right;">网格</td>
            <td>
                <input id="cbReseauId" class="mini-combobox" value="00000000-0000-0000-0000-000000000000" style="width:200px;" textfield="ReseauName" valuefield="Id" data="[{Id:'00000000-0000-0000-0000-000000000000',ReseauName:'全部'}]"
                       onload="onCbReseauIdLoad" />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">产权</td>
            <td>
                <input id="cbPlaceOwner" class="mini-combobox" value="00000000-0000-0000-0000-000000000000" style="width:200px;" textfield="PlaceOwnerName" valuefield="Id" data=@Html.Raw(ViewData["PlaceOwnersByAll"]) />
            </td>
            <td style="width: 80px; text-align: right;">状态</td>
            <td>
                <input id="cbState" class="mini-combobox" value="0" style="width:200px;" data=@Html.Raw(ViewData["StateByAll"]) />
            </td>
        </tr>
    </table>
    <div style="text-align: center; padding: 10px;">
        <a class="mini-button" iconcls="icon-ok" onclick="onOKClick">确定</a>
    </div>
</div>
<script type="text/javascript">
    mini.parse();

    var btnSearch = mini.get("btnSearch");
    var dgPlace = mini.get("dgPlace");
    var winQuery = mini.get("winQuery");
    var cbProfession = mini.get("cbProfession");
    var txtPlaceName = mini.get("txtPlaceName");
    var cbAreaId = mini.get("cbAreaId");
    var cbReseauId = mini.get("cbReseauId");
    var cbPlaceOwner = mini.get("cbPlaceOwner");
    var cbState = mini.get("cbState");

    function BindDgPlace() {
        btnSearch.setEnabled(false);
        var query_Profession = cbProfession.getValue();
        var query_PlaceName = txtPlaceName.getValue();
        var query_AreaId = cbAreaId.getValue();
        var query_ReseauId = cbReseauId.getValue();
        var query_PlaceOwner = cbPlaceOwner.getValue();
        var query_State = cbState.getValue();
        if (dgPlace.getUrl() == "") {
            dgPlace.setUrl("@Url.RouteUrl(new { controller = "BaseData", action = "GetPlacesPage" })");
        }
        dgPlace.clearSelect(false);
        dgPlace.load({ Profession: query_Profession, PlaceName: query_PlaceName, AreaId: query_AreaId, ReseauId: query_ReseauId, PlaceOwner: query_PlaceOwner, State: query_State });
    }

    function onDgPlaceLoad() {
        btnSearch.setEnabled(true);
    }

    function onDrawCell(e) {
        if (e.field == "Map") {
            e.cellHtml = "<a class='navigationmap' onclick='onMapClick(\"" + e.record.Id + "\");'></a>";
        }
        if (e.field == "PlaceName") {
            e.cellStyle = "color:blue";
        }
    }

    function onMapClick(id) {
        var el = dgPlace.getEl();
        mini.mask({
            el: el,
            cls: 'mini-mask-loading',
            html: '加载中...'
        });
        setTimeout(function () {
            $.ajax({
                url: "@Url.RouteUrl(new { controller = "Map", action = "GetPlacePoint" })",
                data: { PlaceId: id, AreaId: "00000000-0000-0000-0000-000000000000", PlaceName: "", Lng: 0, Lat: 0, Profession: 1 },
                type: "get",
                async: false,
                success: function (result, textStatus) {
                    mini.unmask(el);
                    if (result.Id != null && result.Id == id) {
                        mini.open({
                            url: "@Url.RouteUrl(new { controller = "Map", action = "NavigationMap" })",
                            title: result.PlaceName,
                            iconCls: "icon-map",
                            width: 800,
                            height: 550,
                            showMaxButton: true,
                            onload: function () {
                                var iframe = this.getIFrameEl();
                                var data = result;
                                iframe.contentWindow.SetData(data);
                            }
                        });
                    }
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                    mini.unmask(el);
                }
            });
        }, 50);
    }

    function BindCbReseauId(areaId) {
        cbReseauId.setUrl("@Url.RouteUrl(new { controller = "BaseData", action = "GetUsedReseaus" })" + "/" + areaId + "?getType=2");
    }

    function onCbAreaIdValueChanged(e) {
        BindCbReseauId(e.sender.getValue());
    }

    function onCbReseauIdLoad() {
        cbReseauId.setValue("00000000-0000-0000-0000-000000000000");
    }

    function onReseauIdValidation(e) {
        if (e.isValid) {
            if (e.value == "00000000-0000-0000-0000-000000000000") {
                e.errorText = "请选择网格";
                e.isValid = false;
            }
        }
    }

    function onSearchClick() {
        winQuery.show();
    }

    function onOKClick() {
        BindDgPlace();
        winQuery.hide();
    }

    function onCellClick(e) {
        if (e.column.field == "PlaceName") {
            var el = dgPlace.getEl();
            mini.mask({
                el: el,
                cls: 'mini-mask-loading',
                html: '加载中...'
            });
            setTimeout(function () {
                mini.unmask(el);
                mini.open({
                    url: "@Url.RouteUrl(new { controller = "BaseData", action = "PlaceInfo" })" + "/" + e.record.Id,
                    title: "站点信息",
                    //iconCls: "icon-editor",
                    width: 640,
                    height: 500,
                });
            }, 50);
        }
    }

    function onShowMapClick() {
        var placeIdList = "";
        var rows = dgPlace.getData();
        if (rows.length != 0) {
            for (var i = 0; i < rows.length; i++) {
                placeIdList = placeIdList + rows[i].Id;
                if (i != rows.length - 1) {
                    placeIdList = placeIdList + ",";
                }
            }
        }
        else {
            mini.alert("请先查询数据");
            return;
        }
        setTimeout(function () {
            var url, data;
            url = "@Url.RouteUrl(new { controller = "Map", action = "GetPlacePoints" })";
            data = { PlaceIdList: placeIdList };
            $.ajax({
                url: url,
                data: data,
                type: "post",
                async: false,
                success: function (result, textStatus) {
                    var title;
                    title = "地图导航";
                    mini.open({
                        url: "@Url.RouteUrl(new { controller = "Map", action = "NavigationMap" })",
                        title: title,
                        iconCls: "icon-map",
                        width: 800,
                        height: 550,
                        showMaxButton: true,
                        onload: function () {
                            var iframe = this.getIFrameEl();
                            var data = result;
                            iframe.contentWindow.SetData(data);
                        },
                        ondestroy: function (action) {
                            if (action == "ok") {
                                var iframe = this.getIFrameEl();
                                var data = iframe.contentWindow.GetData();
                                data = mini.clone(data);
                            }
                        }
                    });
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                }
            });
        }, 50);
    }
</script>