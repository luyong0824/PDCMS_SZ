<div id="myToolbar" class="mini-toolbar" style="border-bottom: 0px; padding: 0px;">
    <table style="width: 100%;" cellpadding="0" cellspacing="0">
        <tr>
            <td style="width: 100%;">
                <a class="mini-button" iconcls="icon-help" plain="true" href="@Url.RouteUrl(new { controller = "File", action = "DownloadHelpFiles" })?FileName=Material" target="_blank"></a>当前位置：基础数据>物资管理>物资名称
            </td>
            <td style="white-space: nowrap;">
                <a id="btnSearch" class="mini-button" iconcls="icon-search" plain="true" onclick="onSearchClick">查询</a>
                <a class="mini-button" iconcls="icon-add" plain="true" onclick="onAddClick">新增</a>
                <a class="mini-button" iconcls="icon-edit" plain="true" onclick="onEditClick">修改</a>
                <a class="mini-button" iconcls="icon-remove" plain="true" onclick="onRemoveClick">删除</a>
            </td>
        </tr>
    </table>
</div>
<div class="mini-fit">
    <div class="mini-splitter" style="width:100%;height:100%;">
        <div showcollapsebutton="false" size="180" maxsize="250" minsize="100">
            <div id="treeMaterialCategory" class="mini-tree" style="width:100%; height:100%;" showtreeicon="true" textfield="MaterialCategoryName" valuefield="Id" idfield="Id" parentfield="PId"
                 resultastree="false" expandonload="true" onnodeselect="onTreeMaterialCategoryNodeSelect" expandonnodeclick="true"></div>
        </div>
        <div showcollapsebutton="false">
            <div id="dgMaterial" class="mini-datagrid" style="width: 100%; height: 100%;" idfield="Id" allowmovecolumn="false" borderstyle="border:0px;"
                 multiselect="true" showpager="false" fitcolumns="false" onlycheckselection="true" url="@Url.RouteUrl(new { controller = "BaseData", action = "GetMaterials" })"
                 ondrawcell="onDrawCell" onload="onDgMaterialLoad">
                <div property="columns">
                    <div type="indexcolumn"></div>
                    <div type="checkcolumn"></div>
                    <div field="MaterialCode" header="物资编码" width="70"></div>
                    <div field="MaterialName" header="物资名称" width="180"></div>
                    <div type="comboboxcolumn" field="State" header="状态" width="70">
                        <input property="editor" class="mini-combobox" style="width: 100%;" data=@Html.Raw(ViewData["State"]) />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="winMaterial" class="mini-window" style="width: 350px; height: 200px;"
     showmodal="true" allowresize="false">
    <div id="frmMaterial" class="form">
        <input class="mini-hidden" id="Id" name="Id" />
        <table style="width: 100%;">
            <tr>
                <td style="width: 80px; text-align: right;">物资类别</td>
                <td>
                    <input id="MaterialCategoryId" name="MaterialCategoryId" class="mini-combobox" style="width: 200px;" textfield="MaterialCategoryName" valuefield="Id" data=@Html.Raw(ViewData["MaterialCategorys"])
                           value="00000000-0000-0000-0000-000000000000" required="true" onvalidation="onMaterialCategoryIdValidation" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">物资编码</td>
                <td>
                    <input id="MaterialCode" name="MaterialCode" class="mini-textbox" requirederrortext="请输入物资编码" required="true" style="width: 200px;" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">物资名称</td>
                <td>
                    <input id="MaterialName" name="MaterialName" class="mini-textbox" requirederrortext="请输入物资名称" required="true" style="width: 200px;" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">状态</td>
                <td>
                    <input id="State" name="State" class="mini-combobox" value="1" style="width: 200px;" data=@Html.Raw(ViewData["State"]) />
                </td>
            </tr>
        </table>
    </div>
    <div style="text-align: center; padding: 10px;">
        <a class="mini-button" iconcls="icon-save" onclick="onSaveClick" style="margin-right: 10px;">保存</a>
        <a class="mini-button" iconcls="icon-cancel" onclick="onClearClick">清空</a>
    </div>
</div>
<script type="text/javascript">
    mini.parse();

    var btnSearch = mini.get("btnSearch");
    var treeMaterialCategory = mini.get("treeMaterialCategory");
    var dgMaterial = mini.get("dgMaterial");
    var winMaterial = mini.get("winMaterial");
    var frmMaterial = new mini.Form("#frmMaterial");
    var txtMaterialId = mini.get("Id");
    var cbMaterialCategoryId = mini.get("MaterialCategoryId");
    var txtMaterialCode = mini.get("MaterialCode");
    var cbState = mini.get("State");

    Init();

    function Init() {
        treeMaterialCategory.loadList(@Html.Raw(ViewData["MaterialCategorysTree"]), "Id", "PId");
        if (treeMaterialCategory.getList().length > 1) {
            treeMaterialCategory.select(1, false);
        }
        else {
            treeMaterialCategory.select(0, false);
        }
        BindDgMaterial(treeMaterialCategory.getValue());
    }

    function BindDgMaterial(materialCategoryId) {
        btnSearch.setEnabled(false);
        dgMaterial.clearSelect(false);
        var el = treeMaterialCategory.getEl();
        mini.mask({
            el: el,
            cls: 'mini-mask-loading',
            html: '加载中...'
        });
        dgMaterial.load({ MaterialCategoryId: materialCategoryId });
    }

    function onDgMaterialLoad() {
        btnSearch.setEnabled(true);
        var el = treeMaterialCategory.getEl();
        mini.unmask(el);
    }

    function onDrawCell(e) {
        if (e.field == "State" && e.value == 2) {
            e.cellStyle = "color:red;";
        }
    }

    function onTreeMaterialCategoryNodeSelect(e) {
        BindDgMaterial(e.node.Id);
    }

    function onMaterialCategoryIdValidation(e){
        if (e.isValid) {
            if (e.value == "00000000-0000-0000-0000-000000000000") {
                e.errorText = "请选择物资类别";
                e.isValid = false;
            }
        }
    }

    function ClearFrmMaterial() {
        var idValue = txtMaterialId.getValue();
        var materialCategoryIdValue = cbMaterialCategoryId.getValue();
        frmMaterial.clear();
        txtMaterialId.setValue(idValue);
        cbMaterialCategoryId.setValue(materialCategoryIdValue);
        cbState.setValue(1);
    }

    function onSearchClick() {
        var materialCategoryId = treeMaterialCategory.getValue();
        if (materialCategoryId == null || materialCategoryId == ""){
            materialCategoryId = "00000000-0000-0000-0000-000000000000";
        }
        BindDgMaterial(materialCategoryId);
    }

    function onAddClick() {
        var materialCategoryId = treeMaterialCategory.getValue();
        if (materialCategoryId == null || materialCategoryId == "" || materialCategoryId == "00000000-0000-0000-0000-000000000000"){
            mini.alert("请选择一个物资类别");
        }
        else {
            txtMaterialId.setValue("");
            cbMaterialCategoryId.setValue(materialCategoryId);
            cbMaterialCategoryId.setEnabled(true);
            ClearFrmMaterial();
            winMaterial.setTitle("新增物资名称");
            winMaterial.show();
            txtMaterialCode.focus();
        }
    }

    function onEditClick() {
        var rows = dgMaterial.getSelecteds();
        if (rows.length == 0) {
            mini.alert("请选择一条要修改的数据");
        }
        else {
            ClearFrmMaterial();
            winMaterial.setTitle("修改物资名称");
            winMaterial.show();
            var el = winMaterial.getEl();
            mini.mask({
                el: el,
                cls: 'mini-mask-loading',
                html: '加载中...'
            });
            setTimeout(function () {
                $.ajax({
                    url: "@Url.RouteUrl(new { controller = "BaseData", action = "GetMaterialById" })" + "/" + rows[0].Id,
                    type: "get",
                    async: false,
                    success: function (result, textStatus) {
                        if (result.Id != null && result.Id == rows[0].Id) {
                            cbMaterialCategoryId.setEnabled(false);
                            frmMaterial.setData(result);
                            txtMaterialCode.focus();
                        }
                        else {
                            winMaterial.hide();
                        }
                    },
                    error: function (xmlHttpRequest, textStatus, errorThrown) {
                        winMaterial.hide();
                    }
                });
            }, 50);
            setTimeout(function () {
                mini.unmask(el);
            }, 300);
        }
    }

    function onRemoveClick() {
        var rows = dgMaterial.getSelecteds();
        if (rows.length == 0) {
            mini.alert("请选择要删除的数据");
        }
        else {
            mini.confirm("确定要删除选中的数据？", "删除物资名称",
            function (action) {
                if (action == "ok") {
                    var loading = mini.loading("处理中,请稍后...", "删除数据");
                    var jsonData = mini.encode(rows);
                    $.ajax({
                        url: "@Url.RouteUrl(new { controller = "BaseData", action = "RemoveMaterials" })",
                        data: AddAntiForgeryToken({ data: jsonData }),
                        type: "post",
                        success: function (result, textStatus) {
                            mini.hideMessageBox(loading);
                            if (result.Code != null && result.Code == 0) {
                                ShowSucessMessage(result.Message);
                                BindDgMaterial(treeMaterialCategory.getValue());
                            }
                        },
                        error: function (xmlHttpRequest, textStatus, errorThrown) {
                            mini.hideMessageBox(loading);
                        }
                    });
                }
            });
        }
    }

    function onSaveClick() {
        frmMaterial.validate();
        if (frmMaterial.isValid() == false) return;
        var loading = mini.loading("处理中,请稍后...", "保存数据");
        var jsonData = mini.encode(frmMaterial.getData());
        $.ajax({
            url: "@Url.RouteUrl(new { controller = "BaseData", action = "SaveMaterial" })",
            data: AddAntiForgeryToken({ data: jsonData }),
            type: "post",
            success: function (result, textStatus) {
                mini.hideMessageBox(loading);
                if (result.Code != null && result.Code == 0) {
                    winMaterial.hide();
                    ShowSucessMessage(result.Message);
                    BindDgMaterial(treeMaterialCategory.getValue());
                }
            },
            error: function (xmlHttpRequest, textStatus, errorThrown) {
                mini.hideMessageBox(loading);
            }
        });
    }

    function onClearClick() {
        ClearFrmMaterial();
        txtMaterialCode.focus();
    }
</script>