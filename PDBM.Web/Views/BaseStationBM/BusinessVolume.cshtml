<div id="myToolbar" class="mini-toolbar" style="border-bottom: 0px; padding: 0px;">
    <table style="width: 100%;" cellpadding="0" cellspacing="0">
        <tr>
            <td style="width: 100%;">
                <a class="mini-button" iconcls="icon-help" plain="true" href="@Url.RouteUrl(new { controller = "File", action = "DownloadHelpFiles" })?FileName=BusinessVolume" target="_blank"></a>当前位置：基站建维>维护管理>业务量导入
            </td>
            <td style="white-space: nowrap;">
                <a id="btnSearch" class="mini-button" iconcls="icon-search" plain="true" onclick="onSearchClick">查询</a>
                <a class="mini-button" iconcls="icon-edit" plain="true" onclick="onEditClick">修改</a>
                <a class="mini-button" iconcls="icon-add" plain="true" onclick="onImportClick">批量导入</a>
            </td>
        </tr>
    </table>
</div>
<div class="mini-fit">
    <div id="dgBusinessVolume" class="mini-datagrid" style="width: 100%; height: 100%;" idfield="Id" allowmovecolumn="false"
         multiselect="true" fitcolumns="false" onlycheckselection="true" showreloadbutton="false" pagesize="15" sizelist="[15,30,50,100]"
         virtualscroll="false" frozenstartcolumn="0" onload="onDgBusinessVolumeLoad">
        <div property="columns">
            <div type="indexcolumn"></div>
            <div type="checkcolumn"></div>
            <div field="LogicalType" header="逻辑号类型" width="80"></div>
            <div field="LogicalNumber" header="逻辑号" width="150"></div>
            <div field="TrafficVolumes" header="话务量" width="80"></div>
            <div field="BusinessVolumes" header="业务量" width="80"></div>
            <div field="CreateFullName" header="登记人" width="80"></div>
            <div field="CreateDate" header="登记日期" width="100" dateformat="yyyy-MM-dd"></div>
        </div>
    </div>
</div>
<div id="winQuery" class="mini-window" style="width: 320px; height: 165px;"
     showmodal="true" allowresize="false" title="查询条件">
    <table style="width: 100%;">
        <tr>
            <td style="width: 80px; text-align: right;">登记日期</td>
            <td>
                <table border="0" cellpadding="0" cellspacing="0">
                    <tr>
                        <td><input id="dpBeginDate" class="mini-datepicker" style="width:98px;" value="new Date()" showclearbutton="false" allowinput="false" /></td>
                        <td>至</td>
                        <td><input id="dpEndDate" class="mini-datepicker" style="width:98px;" value="new Date()" showclearbutton="false" allowinput="false" /></td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">逻辑号类型</td>
            <td>
                <input id="cbLogicalType" class="mini-combobox" value="0" style="width:208px;" data=@Html.Raw(ViewData["LogicalTypeByAll"]) />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">逻辑号</td>
            <td>
                <input id="txtLogicalNumber" class="mini-textbox" style="width:208px;" />
            </td>
        </tr>
    </table>
    <div style="text-align: center; padding: 10px;">
        <a class="mini-button" iconcls="icon-ok" onclick="onOKClick">确定</a>
    </div>
</div>
<div id="winBusinessVolume" class="mini-window" style="width: 320px; height: 170px;"
     showmodal="true" allowresize="false">
    <div id="frmBusinessVolume" class="form">
        <input class="mini-hidden" id="Id" name="Id" />
        <div title="修改业务量" style="height:100%">
            <table style="width: 100%;">
                <tr>
                    <td style="width: 80px; text-align: right;">逻辑号</td>
                    <td>
                        <input id="LogicalNumber" name="LogicalNumber" class="mini-textbox" requirederrortext="请输入逻辑号" required="true" style="width: 200px;" />
                    </td>
                </tr>
                <tr>
                    <td style="width: 80px; text-align: right;">话务量</td>
                    <td>
                        <input id="TrafficVolumes" name="TrafficVolumes" class="mini-textbox" vtype='float' requirederrortext="请输入话务量" required="true" style="width: 200px;" />
                    </td>
                </tr>
                <tr>
                    <td style="width: 80px; text-align: right;">业务量</td>
                    <td>
                        <input id="BusinessVolumes" name="BusinessVolumes" class="mini-textbox" vtype='float' requirederrortext="请输入纬度" required="true" style="width: 200px;" />
                    </td>
                </tr>
            </table>
        </div>
        <div style="text-align: center; padding: 10px;">
            <a class="mini-button" iconcls="icon-save" onclick="onSaveClick" style="margin-right: 10px;">保存</a>
            <a class="mini-button" iconcls="icon-cancel" onclick="onClearClick">清空</a>
        </div>
    </div>
</div>
<div id="winImport" class="mini-window" style="width: 330px; height: 170px;"
     showmodal="true" allowresize="false" title="批量导入业务量">
    <table style="width: 100%;">
        <tr>
            <td style="width: 80px; text-align: right;">示例及模板</td>
            <td>
                <a href="@Url.RouteUrl(new { controller = "File", action = "DownloadTemplatesAndSamples" })?FileType=9" target="_blank">模板下载</a>&nbsp;&nbsp;<a href="@Url.RouteUrl(new { controller = "File", action = "DownloadTemplatesAndSamples" })?FileType=10" target="_blank">示例下载</a>
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">导入文件</td>
            <td>
                <input id="beFile" style="width:200px;" allowinput="false" class="mini-buttonedit searchbox" showclose="true" text="请上传" value="00000000-0000-0000-0000-000000000000" required="true"
                       onbuttonclick="onFileSelectButtonClick" oncloseclick="onFileSelectButtonCloseClick" onvalidation="onBeFileValidation" />
            </td>
        </tr>
        <tr>
            <td align="center" colspan="2">
                <div id="ck_1" name="product" class="mini-checkbox" readonly="false" text="2G" onvaluechanged="onValueChanged1"></div><div id="ck_2" name="product" class="mini-checkbox" readonly="false" text="2D" onvaluechanged="onValueChanged2"></div><div id="ck_3" name="product" class="mini-checkbox" readonly="false" text="3G" onvaluechanged="onValueChanged3"></div><div id="ck_4" name="product" class="mini-checkbox" readonly="false" text="4G" onvaluechanged="onValueChanged4"></div>
            </td>
        </tr>
    </table>
    <div style="text-align: center; padding: 10px;">
        <a class="mini-button" iconcls="icon-ok" onclick="onImportOKClick">确定导入</a>
    </div>
</div>
<div id="winImportError" class="mini-window" style="width: 600px; height: 320px;"
     showmodal="true" allowresize="false" title="批量导入错误提示">
    <div class="mini-fit">
        <div id="dgImportError" class="mini-datagrid" style="width: 100%; height: 100%;" allowmovecolumn="false"
             multiselect="true" fitcolumns="false" onlycheckselection="true" showpager="false"
             virtualscroll="true" ondrawcell="onDgImportErrorDrawCell">
            <div property="columns">
                <div type="indexcolumn"></div>
                <div field="ObjectName" header="对象名称" width="100"></div>
                <div field="PropertyName" header="属性名称" width="100"></div>
                <div field="ErrorMessage" header="错误信息" width="320"></div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    mini.parse();

    var btnSearch = mini.get("btnSearch");
    var dgBusinessVolume = mini.get("dgBusinessVolume");
    var winQuery = mini.get("winQuery");
    var dpBeginDate = mini.get("dpBeginDate");
    var dpEndDate = mini.get("dpEndDate");
    var cbLogicalType = mini.get("cbLogicalType");
    var txtLogicalNumber = mini.get("txtLogicalNumber");

    var winBusinessVolume = mini.get("winBusinessVolume");
    var frmBusinessVolume = new mini.Form("#frmBusinessVolume");
    var txtBusinessVolumeId = mini.get("Id");
    var txt_LogicalNumber = mini.get("LogicalNumber");

    var winImport = mini.get("winImport");
    var beFile = mini.get("beFile");
    var winImportError = mini.get("winImportError");
    var dgImportError = mini.get("dgImportError");
    var ck_1 = mini.get("ck_1");
    var ck_2 = mini.get("ck_2");
    var ck_3 = mini.get("ck_3");
    var ck_4 = mini.get("ck_4");
    var logicalType = 0;

    Init();

    function Init() {
        dpBeginDate.setValue(new Date().DateAdd("y", -1));
        //BindDgBusinessVolume();
    }

    function BindDgBusinessVolume() {
        btnSearch.setEnabled(false);
        var query_BeginDate = dpBeginDate.getFormValue();
        var query_EndDate = dpEndDate.getFormValue();
        var query_LogicalType = cbLogicalType.getValue();
        var query_LogicalNumber = txtLogicalNumber.getValue();
        if (dgBusinessVolume.getUrl() == "") {
            dgBusinessVolume.setUrl("@Url.RouteUrl(new { controller = "BaseStationBM", action = "GetBusinessVolumesPage" })");
        }
        dgBusinessVolume.clearSelect(false);
        dgBusinessVolume.load({ BeginDate: query_BeginDate, EndDate: query_EndDate, LogicalType: query_LogicalType, LogicalNumber: query_LogicalNumber });
    }

    function onDgBusinessVolumeLoad() {
        btnSearch.setEnabled(true);
    }

    function onSearchClick() {
        winQuery.show();
    }

    function onOKClick() {
        BindDgBusinessVolume();
        winQuery.hide();
    }

    function onEditClick() {
        var rows = dgBusinessVolume.getSelecteds();
        if (rows.length == 0) {
            mini.alert("请选择一条要修改的数据");
        }
        else {
            ClearFrmBusinessVolume();
            winBusinessVolume.setTitle("修改业务量");
            winBusinessVolume.show();
            var el = winBusinessVolume.getEl();
            mini.mask({
                el: el,
                cls: 'mini-mask-loading',
                html: '加载中...'
            });
            setTimeout(function () {
                $.ajax({
                    url: "@Url.RouteUrl(new { controller = "BaseStationBM", action = "GetBusinessVolumeById" })" + "/" + rows[0].Id,
                    type: "get",
                    async: false,
                    success: function (result, textStatus) {
                        if (result.Id != null && result.Id == rows[0].Id) {
                            frmBusinessVolume.setData(result);
                            txt_LogicalNumber.focus();
                        }
                        else {
                            winBusinessVolume.hide();
                        }
                    },
                    error: function (xmlHttpRequest, textStatus, errorThrown) {
                        winBusinessVolume.hide();
                    }
                });
            }, 50);
            setTimeout(function () {
                mini.unmask(el);
            }, 300);
        }
    }

    function onClearClick() {
        ClearFrmBusinessVolume();
        txt_LogicalNumber.focus();
    }

    function onSaveClick() {
        frmBusinessVolume.validate();
        if (frmBusinessVolume.isValid() == false) return;
        var loading = mini.loading("处理中,请稍后...", "保存数据");
        var jsonData = mini.encode(frmBusinessVolume.getData());
        $.ajax({
            url: "@Url.RouteUrl(new { controller = "BaseStationBM", action = "SaveBusinessVolume" })",
            data: AddAntiForgeryToken({ data: jsonData }),
            type: "post",
            success: function (result, textStatus) {
                mini.hideMessageBox(loading);
                if (result.Code != null && result.Code == 0) {
                    winBusinessVolume.hide();
                    ShowSucessMessage(result.Message);
                    BindDgBusinessVolume();
                }
            },
            error: function (xmlHttpRequest, textStatus, errorThrown) {
                mini.hideMessageBox(loading);
            }
        });
    }

    function ClearFrmBusinessVolume() {
        var idValue = txtBusinessVolumeId.getValue();
        frmBusinessVolume.clear();
        txtBusinessVolumeId.setValue(idValue);
    }

    function onImportClick() {
        beFile.setValue("00000000-0000-0000-0000-000000000000");
        beFile.setText("请上传");
        beFile.setIsValid(true);
        logicalType = 0;
        ck_1.setValue(false);
        ck_2.setValue(false);
        ck_3.setValue(false);
        ck_4.setValue(false);
        winImport.show();
    }

    function onImportOKClick() {
        if (logicalType == 0) {
            mini.alert("请选择要导入的逻辑号类型");
            return;
        }
        beFile.validate();
        if (beFile.isValid() == false) return;
        var el = winImport.getEl();
        mini.mask({
            el: el,
            cls: 'mini-mask-loading',
            html: '数据导入中...'
        });
        setTimeout(function () {
            $.ajax({
                url: "@Url.RouteUrl(new { controller = "DataImport", action = "ImportBusinessVolume" })",
                type: "post",
                data: AddAntiForgeryToken({ FileId: beFile.getValue(), LogicalType: logicalType, Profession: 1 }),
                success: function (result, textStatus) {
                    mini.unmask(el);
                    if (!result.Code || result.Code == null) {
                        if (result.length == 0) {
                            ShowSucessMessage("数据导入成功");
                            winImport.hide();
                            BindDgPlace();
                        }
                        else {
                            dgImportError.setData(result);
                            winImportError.show();
                            beFile.setValue("00000000-0000-0000-0000-000000000000");
                            beFile.setText("请上传");
                        }
                    }
                    else {
                        beFile.setValue("00000000-0000-0000-0000-000000000000");
                        beFile.setText("请上传");
                    }
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                    mini.unmask(el);
                    beFile.setValue("00000000-0000-0000-0000-000000000000");
                    beFile.setText("请上传");
                }
            });
        }, 50);
    }

    function onFileSelectButtonClick() {
        var beSelect = this;
        mini.open({
            url: "@Url.RouteUrl(new { controller = "File", action = "FileManager" })",
            title: "上传Excel文件",
            iconCls: "icon-file",
            width: 620,
            height: 200,
            allowResize: false,
            onload: function () {
                var iframe = this.getIFrameEl();
                iframe.contentWindow.SetDataExcel();
            },
            ondestroy: function (action) {
                if (action == "ok") {
                    var iframe = this.getIFrameEl();
                    var data = iframe.contentWindow.GetData();
                    data = mini.clone(data);
                    beSelect.setValue(data.id);
                    beSelect.setText(data.text);
                    beSelect.validate();
                }
            }
        });
    }

    function onFileSelectButtonCloseClick() {
        this.setValue("00000000-0000-0000-0000-000000000000");
        this.setText("请上传");
        this.validate();
    }

    function onBeFileValidation(e) {
        if (e.isValid) {
            if (e.value == "00000000-0000-0000-0000-000000000000") {
                e.errorText = "请上传一个Excel文件";
                e.isValid = false;
            }
        }
    }

    function onDgImportErrorDrawCell(e) {
        if (e.field == "ErrorMessage") {
            e.cellStyle = "color:red;";
        }
    }

    function onValueChanged1(e) {
        var checked = this.getChecked();
        if (checked == true) {
            logicalType = 1;
            ck_2.setValue(false);
            ck_3.setValue(false);
            ck_4.setValue(false);
        }
        else {
            logicalType = 0;
        }
    }

    function onValueChanged2(e) {
        var checked = this.getChecked();
        if (checked == true) {
            logicalType = 2;
            ck_1.setValue(false);
            ck_3.setValue(false);
            ck_4.setValue(false);
        }
        else {
            logicalType = 0;
        }
    }

    function onValueChanged3(e) {
        var checked = this.getChecked();
        if (checked == true) {
            logicalType = 3;
            ck_1.setValue(false);
            ck_2.setValue(false);
            ck_4.setValue(false);
        }
        else {
            logicalType = 0;
        }
    }

    function onValueChanged4(e) {
        var checked = this.getChecked();
        if (checked == true) {
            logicalType = 4;
            ck_1.setValue(false);
            ck_2.setValue(false);
            ck_3.setValue(false);
        }
        else {
            logicalType = 0;
        }
    }
</script>