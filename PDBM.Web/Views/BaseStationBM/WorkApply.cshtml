<div id="myToolbar" class="mini-toolbar" style="border-bottom: 0px; padding: 0px;">
    <table style="width: 100%;" cellpadding="0" cellspacing="0">
        <tr>
            <td style="width: 100%;">
                <a class="mini-button" iconcls="icon-help" plain="true" href="@Url.RouteUrl(new { controller = "File", action = "DownloadHelpFiles" })?FileName=WorkApply" target="_blank"></a>当前位置：零星用工>零星用工>隐患上报
            </td>
            <td style="white-space: nowrap;">
                <a id="btnSearch" class="mini-button" iconcls="icon-search" plain="true" onclick="onSearchClick">查询</a>
                <a class="mini-button" iconcls="icon-add" plain="true" onclick="onAddClick">新增</a>
                <a class="mini-button" iconcls="icon-edit" plain="true" onclick="onEditClick">修改</a>
                <a class="mini-button" iconcls="icon-remove" plain="true" onclick="onRemoveClick">删除</a>
                <a class="mini-button" iconcls="icon-downgrade" plain="true" onclick="onSendClick">发送</a>
            </td>
        </tr>
    </table>
</div>
<div class="mini-fit">
    <div id="dgWorkApply" class="mini-datagrid" style="width: 100%; height: 100%;" idfield="Id" allowmovecolumn="false"
         multiselect="true" fitcolumns="false" onlycheckselection="true" showreloadbutton="false" pagesize="15" sizelist="[15,30,50,100]"
         ondrawcell="onDrawCell" onload="onDgWorkApplyLoad" oncellclick="onCellClick">
        <div property="columns">
            <div type="indexcolumn"></div>
            <div type="checkcolumn"></div>
            <div field="WorkOrderId" header=""></div>
            <div field="IsFile" header=""></div>
            <div field="CreateDate" header="申请日期" width="80" dateformat="yyyy-MM-dd"></div>
            <div field="Title" header="标题" width="250"></div>
            <div field="ReseauName" header="网格" width="60"></div>
            <div field="FullName" header="网格经理" width="60"></div>
            <div field="ApplyReason" header="申请事由" width="250"></div>
            <div field="File" header="附件" width="40"></div>
            <div type="comboboxcolumn" field="OrderState" header="申请状态" width="70">
                <input property="editor" class="mini-combobox" style="width: 100%;" data=@Html.Raw(ViewData["OrderState"]) />
            </div>
            <div field="PGOrderCode" header="派工单号" width="120"></div>
            <div type="comboboxcolumn" field="IsSoved" header="是否解决" width="70">
                <input property="editor" class="mini-combobox" style="width: 100%;" data=@Html.Raw(ViewData["Bool"]) />
            </div>
            <div field="ReturnReason" header="退回原因" width="200"></div>
        </div>
    </div>
</div>
<div id="winQuery" class="mini-window" style="width: 350px; height: 220px;"
     showmodal="true" allowresize="false" title="查询条件">
    <table style="width: 100%;">
        <tr>
            <td style="width: 80px; text-align: right;">申请日期</td>
            <td>
                <table border="0" cellpadding="0" cellspacing="0">
                    <tr>
                        <td><input id="dpBeginDate" class="mini-datepicker" style="width:98px;" value="new Date()" showclearbutton="false" allowinput="false" /></td>
                        <td>至</td>
                        <td><input id="dpEndDate" class="mini-datepicker" style="width:98px;" value="new Date()" showclearbutton="false" allowinput="false" /></td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">标题</td>
            <td>
                <input id="txtTitle" class="mini-textbox" style="width:208px;" />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">网格</td>
            <td>
                <input id="cbReseauId" class="mini-combobox" value="00000000-0000-0000-0000-000000000000" style="width:208px;" textfield="ReseauName" valuefield="Id" data=@Html.Raw(ViewData["ReseauByAll"]) />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">申请状态</td>
            <td>
                <input id="cbOrderState" class="mini-combobox" value="1" style="width:208px;" data=@Html.Raw(ViewData["OrderStateByAll"]) />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">是否解决</td>
            <td>
                <input id="cbIsSoved" class="mini-combobox" value="0" style="width:208px;" data=@Html.Raw(ViewData["BoolByAll"]) />
            </td>
        </tr>
    </table>
    <div style="text-align: center; padding: 10px;">
        <a class="mini-button" iconcls="icon-ok" onclick="onOKClick">确定</a>
    </div>
</div>
<div id="winWorkApply" class="mini-window" style="width: 600px; height: 280px;"
     showmodal="true" allowresize="false">
    <div id="frmWorkApply" class="form">
        <input class="mini-hidden" id="Id" name="Id" />
        <input class="mini-hidden" id="FileIdList" name="FileIdList" value="@ViewData["FileIdList"]" />
        <table style="width: 100%;">
            <tr>
                <td style="width: 80px; text-align: right;">标题</td>
                <td colspan="3">
                    <input id="Title" name="Title" class="mini-textbox" requirederrortext="请输入标题" required="true" style="width: 99%;" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">申请事由</td>
                <td colspan="3">
                    <input id="ApplyReason" name="ApplyReason" class="mini-textarea" requirederrortext="请输入申请事由" required="true" style="width: 99%; height: 80px;" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">现场联系人</td>
                <td>
                    <input id="SceneContactMan" name="SceneContactMan" class="mini-textbox" requirederrortext="请输入现场联系人" required="true" style="width:200px;" />
                </td>
                <td style="width: 80px; text-align: right;">现场联系电话</td>
                <td>
                    <input id="SceneContactTel" name="SceneContactTel" class="mini-textbox" requirederrortext="请输入现场联系电话" required="true" style="width:200px;" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">网格</td>
                <td>
                    <input id="ReseauId" name="ReseauId" class="mini-combobox" value="00000000-0000-0000-0000-000000000000" style="width:200px;" textfield="ReseauName" valuefield="Id" data=@Html.Raw(ViewData["ReseauBySelect"])
                           required="true" onvalidation="onReseauIdValidation" />
                </td>
                <td style="width: 80px; text-align: right;">申请单位</td>
                <td>
                    <input id="CustomerId" name="CustomerId" style="width:200px;" allowinput="false" class="mini-buttonedit searchbox" showclose="true" text="请选择" value="00000000-0000-0000-0000-000000000000" required="true"
                           onbuttonclick="onCustomerSelectButtonClick" oncloseclick="onCustomerSelectButtonCloseClick" onvalidation="onCustomerIdValidation" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">附件</td>
                <td colspan="3">
                    <table>
                        <tr>
                            <td style="width:16px">
                                <a class="fileedit" onclick="onFileEditClick();"></a>
                            </td>
                            <td>
                                附件数量：<input id="Count" name="Count" class="mini-textbox" value="@ViewData["Count"]" />
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </div>
    <div style="text-align: center; padding: 10px;">
        <a class="mini-button" iconcls="icon-save" onclick="onSaveClick" style="margin-right: 10px;">保存</a>
        <a class="mini-button" iconcls="icon-cancel" onclick="onClearClick">清空</a>
    </div>
</div>
<script type="text/javascript">
    mini.parse();

    var btnSearch = mini.get("btnSearch");
    var dgWorkApply = mini.get("dgWorkApply");
    var winQuery = mini.get("winQuery");
    var dpBeginDate = mini.get("dpBeginDate");
    var dpEndDate = mini.get("dpEndDate");
    var txtTitle = mini.get("txtTitle");
    var cbReseauId = mini.get("cbReseauId");
    var cbOrderState = mini.get("cbOrderState");
    var cbIsSoved = mini.get("cbIsSoved");
    var winWorkApply = mini.get("winWorkApply");
    var frmWorkApply = new mini.Form("#frmWorkApply");
    var txtWorkApplyId = mini.get("Id");
    var txtFileIdList = mini.get("FileIdList");
    var txt_Title = mini.get("Title");
    var txt_ApplyReason = mini.get("ApplyReason");
    var txt_SceneContactMan = mini.get("SceneContactMan");
    var txt_SceneContactTel = mini.get("SceneContactTel");
    var cb_ReseauId = mini.get("ReseauId");
    var be_CustomerId = mini.get("CustomerId");
    var cb_OrderState = mini.get("OrderState");

    var count = mini.get("Count");
    count.setWidth("10px");
    if (count.setReadOnly) count.setReadOnly(true);     //只读
    if (count.setIsValid) count.setIsValid(true);      //去除错误提示
    if (count.addCls) count.addCls("asLabel");          //增加asLabel外观

    Init();

    function Init() {
        dgWorkApply.hideColumn(2);
        dgWorkApply.hideColumn(3);
        dpBeginDate.setValue(new Date().DateAdd("m", -1));
        be_CustomerId.setValue("@ViewData["CustomerId"]");
        be_CustomerId.setText("@ViewData["CustomerName"]");
        BindDgWorkApply();
    }

    function BindDgWorkApply() {
        btnSearch.setEnabled(false);
        var query_BeginDate = dpBeginDate.getFormValue();
        var query_EndDate = dpEndDate.getFormValue();
        var query_Title = txtTitle.getValue();
        var query_ReseauId = cbReseauId.getValue();
        var query_OrderState = cbOrderState.getValue();
        var query_IsSoved = cbIsSoved.getValue();
        if (dgWorkApply.getUrl() == "") {
            dgWorkApply.setUrl("@Url.RouteUrl(new { controller = "BaseStationBM", action = "GetWorkApplysPage" })");
        }
        dgWorkApply.clearSelect(false);
        dgWorkApply.load({ BeginDate: query_BeginDate, EndDate: query_EndDate, Title: query_Title, ReseauId: query_ReseauId, OrderState: query_OrderState, IsSoved: query_IsSoved });
    }

    function onDgWorkApplyLoad() {
        btnSearch.setEnabled(true);
    }

    function onDrawCell(e) {
        if (e.field == "Title" && e.value != "") {
            e.cellStyle = "color:Blue;";
        }
        if (e.field == "PGOrderCode" && e.value != "") {
            e.cellStyle = "color:Blue;";
        }
        if (e.field == "File" && e.record.IsFile != "") {
            e.cellHtml = "<a class='file' onclick='onFileClick(\"" + e.record.Id + "\");'></a>";
        }
    }

    function ClearFrmWorkApply() {
        var idValue = txtWorkApplyId.getValue();
        frmWorkApply.clear();
        txtWorkApplyId.setValue(idValue);
        cb_ReseauId.setValue("00000000-0000-0000-0000-000000000000");
        be_CustomerId.setValue("@ViewData["CustomerId"]");
        be_CustomerId.setText("@ViewData["CustomerName"]");
    }

    function onSearchClick() {
        winQuery.show();
    }

    function onOKClick() {
        BindDgWorkApply();
        winQuery.hide();
    }

    function onAddClick() {
        txtWorkApplyId.setValue("00000000-0000-0000-0000-000000000000");
        txtFileIdList.setValue("");
        ClearFrmWorkApply();
        winWorkApply.setTitle("新增隐患上报单");
        txt_SceneContactMan.setValue("@ViewData["FullName"]");
        txt_SceneContactTel.setValue("@ViewData["PhoneNumber"]");
        winWorkApply.show();
        txt_Title.focus();
    }

    function onEditClick() {
        var rows = dgWorkApply.getSelecteds();
        if (rows.length == 0) {
            mini.alert("请选择一条要修改的数据");
        }
        else {
            ClearFrmWorkApply();
            winWorkApply.setTitle("修改隐患上报单");
            winWorkApply.show();
            var el = winWorkApply.getEl();
            mini.mask({
                el: el,
                cls: 'mini-mask-loading',
                html: '加载中...'
            });
            setTimeout(function () {
                $.ajax({
                    url: "@Url.RouteUrl(new { controller = "BaseStationBM", action = "GetWorkApplyById" })" + "/" + rows[0].Id,
                    type: "get",
                    async: false,
                    success: function (result, textStatus) {
                        if (result.Id != null && result.Id == rows[0].Id) {
                            frmWorkApply.setData(result);
                            txt_Title.focus();
                            be_CustomerId.setText(result.CustomerName);
                        }
                        else {
                            winWorkApply.hide();
                        }
                    },
                    error: function (xmlHttpRequest, textStatus, errorThrown) {
                        winWorkApply.hide();
                    }
                });
            }, 50);
            setTimeout(function () {
                mini.unmask(el);
            }, 300);
        }
    }

    function onClearClick() {
        ClearFrmWorkApply();
        txt_Title.focus();
    }

    function onRemoveClick() {
        var rows = dgWorkApply.getSelecteds();
        if (rows.length == 0) {
            mini.alert("请选择要删除的数据");
        }
        else {
            mini.confirm("确定要删除选中的数据？", "删除隐患上报单",
            function (action) {
                if (action == "ok") {
                    var loading = mini.loading("处理中,请稍后...", "删除数据");
                    var jsonData = mini.encode(rows);
                    $.ajax({
                        url: "@Url.RouteUrl(new { controller = "BaseStationBM", action = "RemoveWorkApplys" })",
                        data: AddAntiForgeryToken({ data: jsonData }),
                        type: "post",
                        success: function (result, textStatus) {
                            mini.hideMessageBox(loading);
                            if (result.Code != null && result.Code == 0) {
                                ShowSucessMessage(result.Message);
                                BindDgWorkApply();
                            }
                        },
                        error: function (xmlHttpRequest, textStatus, errorThrown) {
                            mini.hideMessageBox(loading);
                        }
                    });
                }
            });
        }
    }

    function onSaveClick() {
        frmWorkApply.validate();
        if (frmWorkApply.isValid() == false) return;
        var loading = mini.loading("处理中,请稍后...", "保存数据");
        var jsonData = mini.encode(frmWorkApply.getData());
        $.ajax({
            url: "@Url.RouteUrl(new { controller = "BaseStationBM", action = "SaveWorkApply" })",
            data: AddAntiForgeryToken({ data: jsonData }),
            type: "post",
            success: function (result, textStatus) {
                mini.hideMessageBox(loading);
                if (result.Code != null && result.Code == 0) {
                    winWorkApply.hide();
                    ShowSucessMessage(result.Message);
                    BindDgWorkApply();
                }
            },
            error: function (xmlHttpRequest, textStatus, errorThrown) {
                mini.hideMessageBox(loading);
            }
        });
    }

    function onSendClick() {
        var rows = dgWorkApply.getSelecteds();
        if (rows.length == 0) {
            mini.alert("请选择要发送的数据");
        }
        else {
            mini.confirm("确定要发送选中的数据？", "发送隐患上报单",
            function (action) {
                if (action == "ok") {
                    var loading = mini.loading("处理中,请稍后...", "发送单据");
                    var jsonData = mini.encode(rows);
                    $.ajax({
                        url: "@Url.RouteUrl(new { controller = "BaseStationBM", action = "SendWorkApplys" })",
                        data: AddAntiForgeryToken({ data: jsonData }),
                        type: "post",
                        success: function (result, textStatus) {
                            mini.hideMessageBox(loading);
                            if (result.Code != null && result.Code == 0) {
                                ShowSucessMessage(result.Message);
                                BindDgWorkApply();
                            }
                        },
                        error: function (xmlHttpRequest, textStatus, errorThrown) {
                            mini.hideMessageBox(loading);
                        }
                    });
                }
            });
        }
    }

    @*function onSendClick() {
        var rows = dgWorkApply.getSelecteds();
        if (rows.length == 0) {
            mini.alert("请选择一条要发送的数据");
        }
        else {
            var el = dgWorkApply.getEl();
            mini.mask({
                el: el,
                cls: 'mini-mask-loading',
                html: '加载中...'
            });
            setTimeout(function () {
                $.ajax({
                    url: "@Url.RouteUrl(new { controller = "BaseStationBM", action = "GetWorkApplyById" })",
                    data: { Id: rows[0].Id },
                    type: "get",
                    async: false,
                    success: function (result, textStatus) {
                        mini.unmask(el);
                        if (result.Id != null) {
                            if (result.OrderState != 1) {
                                mini.alert("选择的隐患上报单已经发送过流程");
                            }
                            else {
                                mini.open({
                                    url: "@Url.RouteUrl(new { controller = "WorkFlow", action = "WFInstanceSend" })" + "?WFCategoryId=0BFD8077-80C8-43F2-92A7-DAAE3BC673AE&EntityId=" + rows[0].Id,
                                    title: "发送隐患上报单",
                                    width: 850,
                                    height: 500,
                                    allowResize: false,
                                    ondestroy: function (action) {
                                        if (action == "ok") {
                                            ShowSucessMessage("公文发送成功");
                                            BindDgWorkApply();
                                        }
                                        else if (action == "cancel") {
                                        }
                                    }
                                });
                            }
                        }
                        else {
                        }
                    },
                    error: function (xmlHttpRequest, textStatus, errorThrown) {
                        mini.unmask(el);
                    }
                });
            }, 50);
        }
    }*@

    function onCellClick(e) {
        if (e.column.field == "Title") {
            var field = e.field;
            var row = e.row;
            if (row[field] != "") {
                @*OpenPrintWindow("@Url.RouteUrl(new { controller = "PrintPage", action = "WorkApply" })" + "/" + e.record.Id);*@
                var el = document.body;
                mini.mask({
                    el: el,
                    cls: 'mini-mask-loading',
                    html: '加载中...'
                });
                setTimeout(function () {
                    mini.unmask(el);
                    mini.open({
                        url: "@Url.RouteUrl(new { controller = "PrintPage", action = "WorkApplyPrint" })" + "/" + e.record.Id,
                        //title: "基站信息历史记录",
                        //iconCls: "icon-editor",
                        width: 800,
                        height: 500,
                    });
                }, 50);
            }
        }
        else if (e.column.field == "PGOrderCode") {
            var field = e.field;
            var row = e.row;
            if (row[field] != "") {
                OpenPrintWindow("@Url.RouteUrl(new { controller = "PrintPage", action = "WorkOrder" })" + "/" + e.record.WorkOrderId);
            }
        }
    }

    function onSendUserSelectButtonClick() {
        var beSelect = this;
        mini.open({
            url: "@Url.RouteUrl(new { controller = "CustomControl", action = "UserSelection" })",
            title: "选择用户",
            width: 620,
            height: 350,
            allowResize: false,
            ondestroy: function (action) {
                if (action == "ok") {
                    var iframe = this.getIFrameEl();
                    var data = iframe.contentWindow.GetData();
                    data = mini.clone(data);
                    beSelect.setValue(data.id);
                    beSelect.setText(data.text);
                    beSelect.validate();
                }
                else if (action == "cancel") {
                    beSelect.setValue("00000000-0000-0000-0000-000000000000");
                    beSelect.setText("请选择");
                    beSelect.validate();
                }
            }
        });
    }

    function onSendUserSelectButtonCloseClick() {
        this.setValue("00000000-0000-0000-0000-000000000000");
        this.setText("请选择");
        this.validate();
    }


    function onBeSendUserIdValidation(e) {
        if (e.isValid) {
            if (e.value == "00000000-0000-0000-0000-000000000000") {
                e.errorText = "请选择派单人";
                e.isValid = false;
            }
        }
    }

    function onReseauIdValidation(e) {
        if (e.isValid) {
            if (e.value == "00000000-0000-0000-0000-000000000000") {
                e.errorText = "请选择网格";
                e.isValid = false;
            }
        }
    }

    function onCustomerSelectButtonClick() {
        var beSelect = this;
        mini.open({
            url: "@Url.RouteUrl(new { controller = "CustomControl", action = "CustomerSelection" })",
            title: "选择申请单位",
            width: 685,
            height: 410,
            allowResize: false,
            ondestroy: function (action) {
                if (action == "ok") {
                    var iframe = this.getIFrameEl();
                    var data = iframe.contentWindow.GetData();
                    data = mini.clone(data);
                    beSelect.setValue(data.id);
                    beSelect.setText(data.text);
                }
                else if (action == "cancel") {
                    beSelect.setValue("00000000-0000-0000-0000-000000000000");
                    beSelect.setText("请选择");
                }
                beSelect.validate();
            }
        });
    }

    function onCustomerSelectButtonCloseClick() {
        this.setValue("00000000-0000-0000-0000-000000000000");
        this.setText("请选择");
        this.validate();
    }

    function onCustomerIdValidation(e) {
        if (e.isValid) {
            if (e.value == "00000000-0000-0000-0000-000000000000") {
                e.errorText = "请选择申请单位";
                e.isValid = false;
            }
        }
    }

    function onFileEditClick() {
        var el = winWorkApply.getEl();
        mini.mask({
            el: el,
            cls: 'mini-mask-loading',
            html: '加载中...'
        });
        setTimeout(function () {
            $.ajax({
                url: "@Url.RouteUrl(new { controller = "File", action = "GetWorkApplyFiles" })",
                data: { Id: txtWorkApplyId.getValue(), FileIdList: txtFileIdList.getValue() },
                type: "get",
                async: false,
                success: function (result, textStatus) {
                    mini.unmask(el);
                    if (result.Code == null || !result.Code) {
                        mini.open({
                            url: "@Url.RouteUrl(new { controller = "File", action = "FileManager" })",
                            title: "附件",
                            iconCls: "icon-file",
                            width: 620,
                            height: 250,
                            allowResize: false,
                            onload: function () {
                                var iframe = this.getIFrameEl();
                                var data = result;
                                iframe.contentWindow.SetDataEdit(data);
                            },
                            ondestroy: function (action) {
                                if (action == "ok") {
                                    var iframe = this.getIFrameEl();
                                    var data = iframe.contentWindow.GetData();
                                    data = mini.clone(data);
                                    txtFileIdList.setValue(data.FileIdList);
                                }
                            }
                        });
                    }
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                    mini.unmask(el);
                }
            });
        }, 50);
    }

    function onFileClick(id) {
        var el = document.body;
        mini.mask({
            el: el,
            cls: 'mini-mask-loading',
            html: '加载中...'
        });
        setTimeout(function () {
            $.ajax({
                url: "@Url.RouteUrl(new { controller = "File", action = "GetWorkApplyFiles" })",
                data: { Id: id, FileIdList: "" },
                type: "get",
                async: false,
                success: function (result, textStatus) {
                    mini.unmask(el);
                    if (result.Code == null || !result.Code) {
                        mini.open({
                            url: "@Url.RouteUrl(new { controller = "File", action = "FileManager" })",
                            title: "附件",
                            iconCls: "icon-file",
                            width: 620,
                            height: 250,
                            allowResize: false,
                            onload: function () {
                                var iframe = this.getIFrameEl();
                                var data = result;
                                iframe.contentWindow.SetData(data);
                            }
                        });
                    }
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                    mini.unmask(el);
                }
            });
        }, 50);
    }
</script>