<div id="myToolbar" class="mini-toolbar" style="border-bottom: 0px; padding: 0px;">
    <table style="width: 100%;" cellpadding="0" cellspacing="0">
        <tr>
            <td style="width: 100%;">
                <a class="mini-button" iconcls="icon-help" plain="true" href="@Url.RouteUrl(new { controller = "File", action = "DownloadHelpFiles" })?FileName=MaterialSpecList" target="_blank"></a>当前位置：物资管理>物资管理>导入采购清单
            </td>
            <td style="white-space: nowrap;">
                <a id="btnSearch" class="mini-button" iconcls="icon-search" plain="true" onclick="onSearchClick">查询</a>
                <a class="mini-button" iconcls="icon-add" plain="true" onclick="onAddClick">新增</a>
                <a class="mini-button" iconcls="icon-edit" plain="true" onclick="onEditClick">修改</a>
                <a class="mini-button" iconcls="icon-add" plain="true" onclick="onImportClick">批量导入</a>
            </td>
        </tr>
    </table>
</div>
<div class="mini-fit">
    <div id="dgMaterialSpecList" class="mini-datagrid" style="width: 100%; height: 100%;" idfield="Id" allowmovecolumn="false"
         multiselect="true" fitcolumns="false" onlycheckselection="true" showreloadbutton="false" pagesize="15" sizelist="[15,30,50,100]"
         onload="onDgMaterialSpecListLoad">
        <div property="columns">
            <div type="indexcolumn"></div>
            <div type="checkcolumn"></div>
            <div field="ProjectCode" header="立项编号" width="100"></div>
            <div field="CustomerName" header="供应商" width="100"></div>
            <div type="comboboxcolumn" field="MaterialSpecType" header="型号类别" width="80">
                <input property="editor" class="mini-combobox" style="width: 100%;" data=@Html.Raw(ViewData["MaterialSpecType"]) />
            </div>
            <div field="MaterialSpecName" header="规格型号" width="100"></div>
            <div field="UnitPrice" header="单价" width="60"></div>
            <div field="SpecNumber" header="数量" width="60"></div>
            <div field="TotalPrice" header="金额" width="60"></div>
            <div field="OrderCode" header="订单编号" width="100"></div>
        </div>
    </div>
</div>
<div id="winQuery" class="mini-window" style="width: 350px; height: 220px;"
     showmodal="true" allowresize="false" title="查询条件">
    <table style="width: 100%;">
        <tr>
            <td style="width: 80px; text-align: right;">立项编号</td>
            <td>
                <input id="txtProjectCode" class="mini-textbox" style="width:208px;" />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">供应商</td>
            <td>
                <input id="txtCustomerName" class="mini-textbox" style="width:208px;" />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">型号类别</td>
            <td>
                <input id="cbMaterialSpecType" class="mini-combobox" value="0" style="width:208px;" data=@Html.Raw(ViewData["MaterialSpecTypeByAll"]) />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">规格型号</td>
            <td>
                <input id="txtMaterialSpecName" class="mini-textbox" style="width:208px;" />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">订单编号</td>
            <td>
                <input id="txtOrderCode" class="mini-textbox" style="width:208px;" />
            </td>
        </tr>
    </table>
    <div style="text-align: center; padding: 10px;">
        <a class="mini-button" iconcls="icon-ok" onclick="onOKClick">确定</a>
    </div>
</div>
<div id="winMaterialSpecList" class="mini-window" style="width: 350px; height: 300px;"
     showmodal="true" allowresize="false">
    <div id="frmMaterialSpecList" class="form">
        <input class="mini-hidden" id="Id" name="Id" />
        <table style="width: 100%;">
            <tr>
                <td style="width: 80px; text-align: right;">立项编号</td>
                <td>
                    <input id="ProjectCode" name="ProjectCode" class="mini-textbox" requirederrortext="请输入立项编号" required="true" style="width: 200px;" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">供应商</td>
                <td>
                    <input id="CustomerName" name="CustomerName" class="mini-textbox" requirederrortext="请输入供应商" required="true" style="width:200px;" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">型号类别</td>
                <td>
                    <input id="MaterialSpecType" name="MaterialSpecType" class="mini-combobox" value="0" required="true" onvalidation="onMaterialSpecTypeValidation" style="width: 200px;" data=@Html.Raw(ViewData["MaterialSpecTypeBySelect"]) />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">规格型号</td>
                <td>
                    <input id="MaterialSpecName" name="MaterialSpecName" class="mini-textbox" requirederrortext="请输入规格型号" required="true" style="width:200px;" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">单价</td>
                <td>
                    <input id="UnitPrice" name="UnitPrice" class="mini-textbox" vtype='float' emptytext="0.00" style="width: 200px;" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">数量</td>
                <td>
                    <input id="SpecNumber" name="SpecNumber" class="mini-textbox" vtype='float' emptytext="0.00" style="width: 200px;" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">金额</td>
                <td>
                    <input id="TotalPrice" name="TotalPrice" class="mini-textbox" vtype='float' emptytext="0.00" style="width: 200px;" />
                </td>
            </tr>
            <tr>
                <td style="width: 80px; text-align: right;">订单编号</td>
                <td>
                    <input id="OrderCode" name="OrderCode" class="mini-textbox" requirederrortext="请输入订单编号" required="true" style="width:200px;" />
                </td>
            </tr>
        </table>
    </div>
    <div style="text-align: center; padding: 10px;">
        <a class="mini-button" iconcls="icon-save" onclick="onSaveClick" style="margin-right: 10px;">保存</a>
        <a class="mini-button" iconcls="icon-cancel" onclick="onClearClick">清空</a>
    </div>
</div>
<div id="winImport" class="mini-window" style="width: 330px; height: 150px;"
     showmodal="true" allowresize="false" title="批量导入采购清单">
    <table style="width: 100%;">
        <tr>
            <td style="width: 80px; text-align: right;">示例及模板</td>
            <td>
                <a href="@Url.RouteUrl(new { controller = "File", action = "DownloadTemplatesAndSamples" })?FileType=17" target="_blank">模板下载</a>&nbsp;&nbsp;<a href="@Url.RouteUrl(new { controller = "File", action = "DownloadTemplatesAndSamples" })?FileType=18" target="_blank">示例下载</a>
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">导入文件</td>
            <td>
                <input id="beFile" style="width:200px;" allowinput="false" class="mini-buttonedit searchbox" showclose="true" text="请上传" value="00000000-0000-0000-0000-000000000000" required="true"
                       onbuttonclick="onFileSelectButtonClick" oncloseclick="onFileSelectButtonCloseClick" onvalidation="onBeFileValidation" />
            </td>
        </tr>
    </table>
    <div style="text-align: center; padding: 10px;">
        <a class="mini-button" iconcls="icon-ok" onclick="onImportOKClick">确定导入</a>
    </div>
</div>
<div id="winImportError" class="mini-window" style="width: 600px; height: 320px;"
     showmodal="true" allowresize="false" title="批量导入错误提示">
    <div class="mini-fit">
        <div id="dgImportError" class="mini-datagrid" style="width: 100%; height: 100%;" allowmovecolumn="false"
             multiselect="true" fitcolumns="false" onlycheckselection="true" showpager="false"
             virtualscroll="true" ondrawcell="onDgImportErrorDrawCell">
            <div property="columns">
                <div type="indexcolumn"></div>
                <div field="ObjectName" header="对象名称" width="100"></div>
                <div field="PropertyName" header="属性名称" width="100"></div>
                <div field="ErrorMessage" header="错误信息" width="320"></div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    mini.parse();

    var btnSearch = mini.get("btnSearch");
    var dgMaterialSpecList = mini.get("dgMaterialSpecList");
    var winQuery = mini.get("winQuery");
    var txtProjectCode = mini.get("txtProjectCode");
    var txtCustomerName = mini.get("txtCustomerName");
    var cbMaterialSpecType = mini.get("cbMaterialSpecType");
    var txtMaterialSpecName = mini.get("txtMaterialSpecName");
    var txtOrderCode = mini.get("txtOrderCode");
    var winMaterialSpecList = mini.get("winMaterialSpecList");
    var frmMaterialSpecList = new mini.Form("#frmMaterialSpecList");
    var txtMaterialSpecListId = mini.get("Id");
    var txt_ProjectCode = mini.get("ProjectCode");
    var txt_CustomerName = mini.get("CustomerName");
    var cb_MaterialSpecType = mini.get("MaterialSpecType");
    var txt_UnitPrice = mini.get("UnitPrice");
    var txt_SpecNumber = mini.get("SpecNumber");
    var txt_TotalPrice = mini.get("TotalPrice");
    var txt_OrderCode = mini.get("OrderCode");

    var winImport = mini.get("winImport");
    var beFile = mini.get("beFile");
    var winImportError = mini.get("winImportError");
    var dgImportError = mini.get("dgImportError");

    Init();

    function Init() {
        BindDgMaterialSpecList();
    }

    function BindDgMaterialSpecList() {
        btnSearch.setEnabled(false);
        var query_ProjectCode = txtProjectCode.getValue();
        var query_CustomerName = txtCustomerName.getValue();
        var query_MaterialSpecType = cbMaterialSpecType.getValue();
        var query_MaterialSpecName = txtMaterialSpecName.getValue();
        var query_OrderCode = txtOrderCode.getValue();

        if (dgMaterialSpecList.getUrl() == "") {
            dgMaterialSpecList.setUrl("@Url.RouteUrl(new { controller = "BaseStationBM", action = "GetMaterialSpecListPage" })");
        }
        dgMaterialSpecList.clearSelect(false);
        dgMaterialSpecList.load({ ProjectCode: query_ProjectCode, CustomerName: query_CustomerName, MaterialSpecType: query_MaterialSpecType, MaterialSpecName: query_MaterialSpecName, OrderCode: query_OrderCode });
    }

    function onDgMaterialSpecListLoad() {
        btnSearch.setEnabled(true);
    }

    function ClearFrmMaterialSpecList() {
        var idValue = txtMaterialSpecListId.getValue();
        frmMaterialSpecList.clear();
        txtMaterialSpecListId.setValue(idValue);
        cb_MaterialSpecType.setValue("0");
    }

    function onSearchClick() {
        winQuery.show();
    }

    function onOKClick() {
        BindDgMaterialSpecList();
        winQuery.hide();
    }

    function onAddClick() {
        txtMaterialSpecListId.setValue("00000000-0000-0000-0000-000000000000");
        ClearFrmMaterialSpecList();
        winMaterialSpecList.setTitle("新增采购清单");
        winMaterialSpecList.show();
        txt_ProjectCode.focus();
    }

    function onEditClick() {
        var rows = dgMaterialSpecList.getSelecteds();
        if (rows.length == 0) {
            mini.alert("请选择一条要修改的数据");
        }
        else {
            ClearFrmMaterialSpecList();
            winMaterialSpecList.setTitle("修改采购清单");
            winMaterialSpecList.show();
            var el = winMaterialSpecList.getEl();
            mini.mask({
                el: el,
                cls: 'mini-mask-loading',
                html: '加载中...'
            });
            setTimeout(function () {
                $.ajax({
                    url: "@Url.RouteUrl(new { controller = "BaseStationBM", action = "GetMaterialSpecListById" })" + "/" + rows[0].Id,
                    type: "get",
                    async: false,
                    success: function (result, textStatus) {
                        if (result.Id != null && result.Id == rows[0].Id) {
                            frmMaterialSpecList.setData(result);
                            txt_ProjectCode.focus();
                        }
                        else {
                            winMaterialSpecList.hide();
                        }
                    },
                    error: function (xmlHttpRequest, textStatus, errorThrown) {
                        winMaterialSpecList.hide();
                    }
                });
            }, 50);
            setTimeout(function () {
                mini.unmask(el);
            }, 300);
        }
    }

    function onClearClick() {
        ClearFrmMaterialSpecList();
        txt_ProjectCode.focus();
    }

    function onSaveClick() {
        frmMaterialSpecList.validate();
        if (frmMaterialSpecList.isValid() == false) return;
        var loading = mini.loading("处理中,请稍后...", "保存数据");
        var jsonData = mini.encode(frmMaterialSpecList.getData());
        $.ajax({
            url: "@Url.RouteUrl(new { controller = "BaseStationBM", action = "SaveMaterialSpecList" })",
            data: AddAntiForgeryToken({ data: jsonData }),
            type: "post",
            success: function (result, textStatus) {
                mini.hideMessageBox(loading);
                if (result.Code != null && result.Code == 0) {
                    winMaterialSpecList.hide();
                    ShowSucessMessage(result.Message);
                    BindDgMaterialSpecList();
                }
            },
            error: function (xmlHttpRequest, textStatus, errorThrown) {
                mini.hideMessageBox(loading);
            }
        });
    }

    function onMaterialSpecTypeValidation(e) {
        if (e.isValid) {
            if (e.value == "0") {
                e.errorText = "请选择型号类别";
                e.isValid = false;
            }
        }
    }

    function onImportClick() {
        beFile.setValue("00000000-0000-0000-0000-000000000000");
        beFile.setText("请上传");
        beFile.setIsValid(true);
        winImport.show();
    }

    function onImportOKClick() {
        beFile.validate();
        if (beFile.isValid() == false) return;
        var el = winImport.getEl();
        mini.mask({
            el: el,
            cls: 'mini-mask-loading',
            html: '数据导入中...'
        });
        setTimeout(function () {
            $.ajax({
                url: "@Url.RouteUrl(new { controller = "DataImport", action = "ImportMaterialSpecList" })",
                type: "post",
                data: AddAntiForgeryToken({ FileId: beFile.getValue() }),
                success: function (result, textStatus) {
                    mini.unmask(el);
                    if (!result.Code || result.Code == null) {
                        if (result.length == 0) {
                            ShowSucessMessage("数据导入成功");
                            winImport.hide();
                            BindDgMaterialSpecList()
                        }
                        else {
                            if (result[0].PropertyName == "同一立项编号同一供应商同一规格型号") {
                                dgImportError.setData(result);
                                winImportError.show();
                                ShowSucessMessage("数据导入成功");
                                winImport.hide();
                                BindDgMaterialSpecList()
                            }
                            else {
                                dgImportError.setData(result);
                                winImportError.show();
                                beFile.setValue("00000000-0000-0000-0000-000000000000");
                                beFile.setText("请上传");
                            }
                        }
                    }
                    else {
                        beFile.setValue("00000000-0000-0000-0000-000000000000");
                        beFile.setText("请上传");
                    }
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                    mini.unmask(el);
                    beFile.setValue("00000000-0000-0000-0000-000000000000");
                    beFile.setText("请上传");
                }
            });
        }, 50);
    }

    function onFileSelectButtonClick() {
        var beSelect = this;
        mini.open({
            url: "@Url.RouteUrl(new { controller = "File", action = "FileManager" })",
            title: "上传Excel文件",
            iconCls: "icon-file",
            width: 620,
            height: 200,
            allowResize: false,
            onload: function () {
                var iframe = this.getIFrameEl();
                iframe.contentWindow.SetDataExcel();
            },
            ondestroy: function (action) {
                if (action == "ok") {
                    var iframe = this.getIFrameEl();
                    var data = iframe.contentWindow.GetData();
                    data = mini.clone(data);
                    beSelect.setValue(data.id);
                    beSelect.setText(data.text);
                    beSelect.validate();
                }
            }
        });
    }

    function onFileSelectButtonCloseClick() {
        this.setValue("00000000-0000-0000-0000-000000000000");
        this.setText("请上传");
        this.validate();
    }

    function onBeFileValidation(e) {
        if (e.isValid) {
            if (e.value == "00000000-0000-0000-0000-000000000000") {
                e.errorText = "请上传一个Excel文件";
                e.isValid = false;
            }
        }
    }

    function onDgImportErrorDrawCell(e) {
        if (e.field == "ErrorMessage") {
            e.cellStyle = "color:red;";
        }
    }
</script>