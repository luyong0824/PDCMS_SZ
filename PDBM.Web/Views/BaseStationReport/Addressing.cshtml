<div id="myToolbar" class="mini-toolbar" style="border-bottom: 0px; padding: 0px;">
    <table style="width: 100%;" cellpadding="0" cellspacing="0">
        <tr>
            <td style="width: 100%;">
                <a class="mini-button" iconcls="icon-help" plain="true" href="@Url.RouteUrl(new { controller = "File", action = "DownloadHelpFiles" })?FileName=Addressing" target="_blank"></a>当前位置：基站建维>基站报表>租赁进度表
            </td>
            <td style="white-space: nowrap;">
                <a id="btnSearch" class="mini-button" iconcls="icon-search" plain="true" onclick="onSearchClick">查询</a>
                <a id="btnShowMap" class="mini-button" iconcls="icon-map" plain="true" onclick="onShowMapClick">地图导航</a>
                <a class="mini-button" iconcls="icon-excel" plain="true" onclick="ExportExcel">导出Excel</a>
            </td>
        </tr>
    </table>
</div>
<div class="mini-fit">
    <div id="dgAddressing" class="mini-datagrid" style="width: 100%; height: 100%;" idfield="Id" allowmovecolumn="false"
         multiselect="true" fitcolumns="false" onlycheckselection="true" showreloadbutton="false" pagesize="15" sizelist="[15,30,50,100]"
         virtualscroll="false" frozenstartcolumn="0" frozenendcolumn="2" ondrawcell="onDrawCell" onload="onDgAddressingLoad" oncellclick="onCellClick">
        <div property="columns">
            <div type="indexcolumn"></div>
            <div field="PlanningId" header=""></div>
            <div field="PlaceId" header=""></div>
            <div field="IsFile" header=""></div>
            <div field="PlanningCode" header="规划编码" width="60"></div>
            <div field="PlanningName" header="规划名称" width="150"></div>
            <div field="PlaceName" header="基站名称" width="150"></div>
            <div field="AddressingUserFullName" header="租赁人" width="100"></div>
            <div field="AddressingDays" header="租赁时长" width="80"></div>
            <div field="AreaName" header="区域" width="80"></div>
            <div field="ReseauName" header="网格" width="80"></div>
            <div field="PlaceCategoryName" header="基站类型" width="80"></div>
            <div field="Lng" header="经度" width="80"></div>
            <div field="Lat" header="纬度" width="80"></div>
            <div field="Map" header="导航图" width="50"></div>
            <div field="File" header="附件" width="50"></div>
            <div field="ProposedNetwork" header="拟建网络" width="80"></div>
            <div type="comboboxcolumn" field="Importance" header="重要性程度" width="80">
                <input property="editor" class="mini-combobox" style="width: 100%;" data=@Html.Raw(ViewData["Importance"]) />
            </div>
            <div field="PlaceOwnerName" header="产权" width="80"></div>
            <div field="OptionalAddress" header="可选位置" width="150"></div>
            <div field="OwnerName" header="业主名称" width="100"></div>
            <div field="OwnerContact" header="联系人" width="100"></div>
            <div field="OwnerPhoneNumber" header="联系方式" width="100"></div>
            <div type="comboboxcolumn" field="AddressingState" header="寻址状态" width="80">
                <input property="editor" class="mini-combobox" style="width: 100%;" data=@Html.Raw(ViewData["AddressingState"]) />
            </div>
            <div field="AddressingDate" header="租赁完成日期" width="100" dateformat="yyyy-MM-dd"></div>
            <div field="AddressingDepartmentName" header="租赁部门" width="100"></div>
            <div field="AddressingRealName" header="实际租赁人" width="80"></div>
            <div field="Remarks" header="备注" width="150"></div>
            <div field="FullName" header="规划人" width="100"></div>
            <div field="CreateDate" header="规划日期" width="100" dateformat="yyyy-MM-dd"></div>
        </div>
    </div>
</div>
<div id="winQuery" class="mini-window" style="width: 615px; height: 245px;"
     showmodal="true" allowresize="false" title="查询条件">
    <table style="width: 100%;">
        <tr>
            <td style="width: 80px; text-align: right;">规划日期</td>
            <td>
                <table border="0" cellpadding="0" cellspacing="0">
                    <tr>
                        <td><input id="dpBeginDate" class="mini-datepicker" style="width:98px;" value="new Date()" showclearbutton="false" allowinput="false" /></td>
                        <td>至</td>
                        <td><input id="dpEndDate" class="mini-datepicker" style="width:98px;" value="new Date()" showclearbutton="false" allowinput="false" /></td>
                    </tr>
                </table>
            </td>
            <td style="width: 80px; text-align: right;">规划编码</td>
            <td>
                <input id="txtPlanningCode" class="mini-textbox" style="width:208px;" />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">规划名称</td>
            <td>
                <input id="txtPlanningName" class="mini-textbox" style="width:208px;" />
            </td>
            <td style="width: 80px; text-align: right;">基站类型</td>
            <td>
                <input id="cbPlaceCategoryId" class="mini-combobox" value="00000000-0000-0000-0000-000000000000" style="width:208px;" textfield="PlaceCategoryName" valuefield="Id" data=@Html.Raw(ViewData["PlaceCategorysByAll"]) />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">区域</td>
            <td>
                <input id="cbAreaId" class="mini-combobox" value="00000000-0000-0000-0000-000000000000" style="width:208px;" textfield="AreaName" valuefield="Id" data=@Html.Raw(ViewData["AreasByAll"])
                       onvaluechanged="onCbAreaIdValueChanged" />
            </td>
            <td style="width: 80px; text-align: right;">网格</td>
            <td>
                <input id="cbReseauId" class="mini-combobox" value="00000000-0000-0000-0000-000000000000" style="width:208px;" textfield="ReseauName" valuefield="Id" data="[{Id:'00000000-0000-0000-0000-000000000000',ReseauName:'全部'}]"
                       onload="onCbReseauIdLoad" />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">重要性程度</td>
            <td>
                <input id="cbImportance" class="mini-combobox" value="0" style="width:208px;" data=@Html.Raw(ViewData["ImportanceByAll"]) />
            </td>
            <td style="width: 80px; text-align: right;">寻址状态</td>
            <td>
                <input id="cbAddressingState" class="mini-combobox" value="0" style="width:208px;" data=@Html.Raw(ViewData["AddressingStateByAll"]) />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">租赁部门</td>
            <td>
                <input id="cbAddressingDepartmentId" class="mini-combobox" value="00000000-0000-0000-0000-000000000000" style="width:208px;" textfield="DepartmentName" valuefield="Id" data=@Html.Raw(ViewData["AddressingDepartmentsByAll"]) />
            </td>
            <td style="width: 80px; text-align: right;">租赁人</td>
            <td>
                <input id="beAddressingUserId" style="width:208px;" allowinput="false" class="mini-buttonedit searchbox" showclose="true" text="全部" value="00000000-0000-0000-0000-000000000000"
                       onbuttonclick="onUserSelectButtonClick" oncloseclick="onUserSelectButtonCloseClick" />
            </td>
        </tr>
        <tr>
            <td style="width: 80px; text-align: right;">指定租赁人</td>
            <td>
                <input id="cbIsAppoint" class="mini-combobox" value="0" style="width:208px;" data=@Html.Raw(ViewData["BoolByAll"]) />
            </td>
        </tr>
    </table>
    <div style="text-align: center; padding: 10px;">
        <a class="mini-button" iconcls="icon-ok" onclick="onOKClick">确定</a>
    </div>
</div>
<iframe id="exportIFrame" style="display:none;"></iframe>
<!--导出Excel相关HTML-->
<form id="excelForm" action="export.aspx?type=excel" method="post" target="excelIFrame">
    <input type="hidden" name="columns" id="excelData" />
</form>
<iframe id="excelIFrame" name="excelIFrame" style="display:none;"></iframe>
<script type="text/javascript">
    mini.parse();

    var btnSearch = mini.get("btnSearch");
    var dgAddressing = mini.get("dgAddressing");
    var winQuery = mini.get("winQuery");
    var dpBeginDate = mini.get("dpBeginDate");
    var dpEndDate = mini.get("dpEndDate");
    var txtPlanningCode = mini.get("txtPlanningCode");
    var txtPlanningName = mini.get("txtPlanningName");
    var cbPlaceCategoryId = mini.get("cbPlaceCategoryId");
    var cbAreaId = mini.get("cbAreaId");
    var cbReseauId = mini.get("cbReseauId");
    var cbImportance = mini.get("cbImportance");
    var cbAddressingState = mini.get("cbAddressingState");
    var cbAddressingDepartmentId = mini.get("cbAddressingDepartmentId");
    var beAddressingUserId = mini.get("beAddressingUserId");
    var cbIsAppoint = mini.get("cbIsAppoint");

    Init();

    function Init() {
        dgAddressing.hideColumn(1);
        dgAddressing.hideColumn(2);
        dgAddressing.hideColumn(3);
        dpBeginDate.setValue(new Date().DateAdd("y", -1));
    }

    function BindDgAddressing() {
        btnSearch.setEnabled(false);
        var query_BeginDate = dpBeginDate.getFormValue();
        var query_EndDate = dpEndDate.getFormValue();
        var query_PlanningCode = txtPlanningCode.getValue();
        var query_PlanningName = txtPlanningName.getValue();
        var query_PlaceCategoryId = cbPlaceCategoryId.getValue();
        var query_AreaId = cbAreaId.getValue();
        var query_ReseauId = cbReseauId.getValue();
        var query_Importance = cbImportance.getValue();
        var query_AddressingState = cbAddressingState.getValue();
        var query_AddressingDepartmentId = cbAddressingDepartmentId.getValue();
        var query_AddressingUserId = beAddressingUserId.getValue();
        var query_IsAppoint = cbIsAppoint.getValue();

        if (dgAddressing.getUrl() == "") {
            dgAddressing.setUrl("@Url.RouteUrl(new { controller = "BaseStationReport", action = "GetAddressingReportPage" })");
        }
        dgAddressing.clearSelect(false);
        dgAddressing.load({
            BeginDate: query_BeginDate, EndDate: query_EndDate, PlanningCode: query_PlanningCode, PlanningName: query_PlanningName,
            PlaceCategoryId: query_PlaceCategoryId, AreaId: query_AreaId, ReseauId: query_ReseauId, Importance: query_Importance,
            AddressingState: query_AddressingState, AddressingDepartmentId: query_AddressingDepartmentId, AddressingUserId: query_AddressingUserId,
            IsAppoint: query_IsAppoint
        });
    }

    function onDgAddressingLoad() {
        btnSearch.setEnabled(true);
    }

    function onDrawCell(e) {
        if (e.field == "Map") {
            e.cellHtml = "<a class='navigationmap' onclick='onMapClick(\"" + e.record.PlanningId + "\",\"" + e.record.PlaceId + "\");'></a>";
        }
        if (e.field == "File" && e.record.Id != "00000000-0000-0000-0000-000000000000" && e.record.IsFile != '') {
            e.cellHtml = "<a class='file' onclick='onFileClick(\"" + e.record.Id + "\");'></a>";
        }
        if (e.field == "PlaceName") {
            e.cellStyle = "color:blue";
        }
    }

    function onMapClick(id, placeId) {
        var el = dgAddressing.getEl();
        mini.mask({
            el: el,
            cls: 'mini-mask-loading',
            html: '加载中...'
        });
        setTimeout(function () {
            var url, data, getId;
            if (placeId == "00000000-0000-0000-0000-000000000000") {
                url = "@Url.RouteUrl(new { controller = "Map", action = "GetPlanningPoint" })";
                data = { PlanningId: id, AreaId: "00000000-0000-0000-0000-000000000000", PlanningName: "", Lng: 0, Lat: 0, Profession: 1 };
                getId = id;
            }
            else {
                url = "@Url.RouteUrl(new { controller = "Map", action = "GetPlacePoint" })";
                data = { PlaceId: placeId, AreaId: "00000000-0000-0000-0000-000000000000", PlaceName: "", Lng: 0, Lat: 0, Profession: 1 };
                getId = placeId;
            }
            $.ajax({
                url: url,
                data: data,
                type: "get",
                async: false,
                success: function (result, textStatus) {
                    mini.unmask(el);
                    if (result.Id != null && result.Id == getId) {
                        var title;
                        if (placeId == "00000000-0000-0000-0000-000000000000") {
                            title = result.PlanningName;
                        }
                        else {
                            title = result.PlaceName;
                        }
                        mini.open({
                            url: "@Url.RouteUrl(new { controller = "Map", action = "NavigationMap" })",
                            title: title,
                            iconCls: "icon-map",
                            width: 800,
                            height: 550,
                            showMaxButton: true,
                            onload: function () {
                                var iframe = this.getIFrameEl();
                                var data = result;
                                iframe.contentWindow.SetData(data);
                            }
                        });
                    }
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                    mini.unmask(el);
                }
            });
        }, 50);
    }

    function onFileClick(id) {
        var el = dgAddressing.getEl();
        mini.mask({
            el: el,
            cls: 'mini-mask-loading',
            html: '加载中...'
        });
        setTimeout(function () {
            $.ajax({
                url: "@Url.RouteUrl(new { controller = "File", action = "GetAddressingFiles" })",
                data: { AddressingId: id, FileIdList: "" },
                type: "get",
                async: false,
                success: function (result, textStatus) {
                    mini.unmask(el);
                    if (result.Code == null || !result.Code) {
                        mini.open({
                            url: "@Url.RouteUrl(new { controller = "File", action = "FileManager" })",
                            title: "附件",
                            iconCls: "icon-file",
                            width: 620,
                            height: 250,
                            allowResize: false,
                            onload: function () {
                                var iframe = this.getIFrameEl();
                                var data = result;
                                iframe.contentWindow.SetData(data);
                            }
                        });
                    }
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                    mini.unmask(el);
                }
            });
        }, 50);
    }

    function BindCbReseauId(areaId) {
        cbReseauId.setUrl("@Url.RouteUrl(new { controller = "BaseData", action = "GetUsedReseaus" })" + "/" + areaId + "?getType=2");
    }

    function onCbAreaIdValueChanged(e) {
        BindCbReseauId(e.sender.getValue());
    }

    function onCbReseauIdLoad() {
        cbReseauId.setValue("00000000-0000-0000-0000-000000000000");
    }

    function onReseauIdLoad() {
        cb_ReseauId.setValue("00000000-0000-0000-0000-000000000000");
    }

    function onUserSelectButtonClick() {
        var beSelect = this;
        mini.open({
            url: "@Url.RouteUrl(new { controller = "CustomControl", action = "UserSelection" })",
            title: "选择用户",
            width: 620,
            height: 350,
            allowResize: false,
            ondestroy: function (action) {
                if (action == "ok") {
                    var iframe = this.getIFrameEl();
                    var data = iframe.contentWindow.GetData();
                    data = mini.clone(data);
                    beSelect.setValue(data.id);
                    beSelect.setText(data.text);
                }
                else if (action == "cancel") {
                    beSelect.setValue("00000000-0000-0000-0000-000000000000");
                    beSelect.setText("全部");
                }
            }
        });
    }

    function onUserSelectButtonCloseClick() {
        this.setValue("00000000-0000-0000-0000-000000000000");
        this.setText("全部");
    }

    function onSearchClick() {
        winQuery.show();
    }

    function onOKClick() {
        BindDgAddressing();
        winQuery.hide();
    }

    function onShowMapClick() {
        var planningIdList = "";
        var rows = dgAddressing.getData();
        if (rows.length != 0) {
            for (var i = 0; i < rows.length; i++) {
                planningIdList = planningIdList + rows[i].PlanningId;
                if (i != rows.length - 1) {
                    planningIdList = planningIdList + ",";
                }
            }
        }
        else {
            mini.alert("请先查询数据");
            return;
        }
        setTimeout(function () {
            var url, data;
            url = "@Url.RouteUrl(new { controller = "Map", action = "GetPlanningPoints" })";
            data = { PlanningIdList: planningIdList };
            $.ajax({
                url: url,
                data: data,
                type: "post",
                async: false,
                success: function (result, textStatus) {
                    var title;
                    title = "地图导航";
                    mini.open({
                        url: "@Url.RouteUrl(new { controller = "Map", action = "NavigationMap" })",
                        title: title,
                        iconCls: "icon-map",
                        width: 800,
                        height: 550,
                        showMaxButton: true,
                        onload: function () {
                            var iframe = this.getIFrameEl();
                            var data = result;
                            iframe.contentWindow.SetData(data);
                        },
                        ondestroy: function (action) {
                            if (action == "ok") {
                                var iframe = this.getIFrameEl();
                                var data = iframe.contentWindow.GetData();
                                data = mini.clone(data);
                            }
                        }
                    });
                },
                error: function (xmlHttpRequest, textStatus, errorThrown) {
                }
            });
        }, 50);
    }

    function ExportExcel() {
        var columns = dgAddressing.getBottomColumns();
        function getColumns(columns) {
            columns = columns.clone();
            for (var i = columns.length - 1; i >= 0; i--) {
                var column = columns[i];
                if (!column.field) {
                    columns.removeAt(i);
                } else {
                    var c = { header: column.header, field: column.field };
                    columns[i] = c;
                }
            }
            return columns;
        }

        var columns = getColumns(columns);
        var json = mini.encode(columns);
        document.getElementById("excelData").value = json;
        var excelForm = document.getElementById("excelForm");
        excelForm.action = "@Url.RouteUrl(new { controller = "DataOutput", action = "ExportAddressingReportExcel" })" + "?BeginDate=" + dpBeginDate.getFormValue() + "&EndDate=" + dpEndDate.getFormValue() + "&PlanningCode=" + txtPlanningCode.getValue() + "&PlanningName=" + txtPlanningName.getValue() + "&Profession=1&PlaceCategoryId=" + cbPlaceCategoryId.getValue() + "&AreaId=" + cbAreaId.getValue() + "&ReseauId=" + cbReseauId.getValue() + "&Importance=" + cbImportance.getValue() + "&AddressingState=" + cbAddressingState.getValue() + "&AddressingDepartmentId=" + cbAddressingDepartmentId.getValue() + "&AddressingUserId=" + beAddressingUserId.getValue() + "&IsAppoint=" + cbIsAppoint.getValue();
        excelForm.submit();
    }

    function onCellClick(e) {
        if (e.column.field == "PlaceName" && e.PlaceId != "00000000-0000-0000-0000-000000000000") {
            var el = dgAddressing.getEl();
            mini.mask({
                el: el,
                cls: 'mini-mask-loading',
                html: '加载中...'
            });
            setTimeout(function () {
                mini.unmask(el);
                mini.open({
                    url: "@Url.RouteUrl(new { controller = "BaseData", action = "PlaceInfo" })" + "/" + e.record.PlaceId,
                    title: "站点信息",
                    //iconCls: "icon-editor",
                    width: 670,
                    height: 500,
                });
            }, 50);
        }
    }
</script>